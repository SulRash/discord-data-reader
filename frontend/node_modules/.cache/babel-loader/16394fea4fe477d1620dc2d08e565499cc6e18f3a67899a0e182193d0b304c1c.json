{"ast":null,"code":"var _jsxFileName = \"/home/sultan/Documents/GitHub/discord-data-reader/discord-data-viewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, InputGroup, FormControl, ListGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dataPath, setDataPath] = useState('');\n  const [userId, setUserId] = useState('');\n  const [messages, setMessages] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/messages', {\n        data_path: dataPath,\n        user_id: userId\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"Enter the path to your Discord data package\",\n              value: dataPath,\n              onChange: e => setDataPath(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"Enter your user ID\",\n              value: userId,\n              onChange: e => setUserId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: fetchData,\n              children: \"Load Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: message.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), \" (\", message.channel_id, \"):\", ' ', message.content]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O94ItqMnqrsmpGYeTGXF3inIkY4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","InputGroup","FormControl","ListGroup","axios","jsxDEV","_jsxDEV","App","_s","dataPath","setDataPath","userId","setUserId","messages","setMessages","fetchData","response","post","data_path","user_id","data","error","console","className","children","fluid","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","message","index","Item","username","channel_id","content","_c","$RefreshReg$"],"sources":["/home/sultan/Documents/GitHub/discord-data-reader/discord-data-viewer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  InputGroup,\n  FormControl,\n  ListGroup,\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [dataPath, setDataPath] = useState('');\n  const [userId, setUserId] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/messages', {\n        data_path: dataPath,\n        user_id: userId,\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Row className=\"my-4\">\n          <Col>\n            <InputGroup>\n              <FormControl\n                placeholder=\"Enter the path to your Discord data package\"\n                value={dataPath}\n                onChange={(e) => setDataPath(e.target.value)}\n              />\n              <FormControl\n                placeholder=\"Enter your user ID\"\n                value={userId}\n                onChange={(e) => setUserId(e.target.value)}\n              />\n              <Button variant=\"primary\" onClick={fetchData}>\n                Load Messages\n              </Button>\n            </InputGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup>\n              {messages.map((message, index) => (\n                <ListGroup.Item key={index}>\n                  <strong>{message.username}</strong> ({message.channel_id}):{' '}\n                  {message.content}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}