{"ast":null,"code":"var _jsxFileName = \"/home/sultan/Documents/GitHub/discord-data-reader/discord-data-viewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, InputGroup, FormControl, ListGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dataPath, setDataPath] = useState('');\n  const [userId, setUserId] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const fetchData = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/messages', {\n        data_path: dataPath,\n        user_id: userId\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const uniqueUsernames = Array.from(new Set(messages.map(message => message.username)));\n  const filteredMessages = messages.filter(message => message.username === selectedUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"input-row\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"Enter the path to your Discord data package\",\n              value: dataPath,\n              onChange: e => setDataPath(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"Enter your user ID\",\n              value: userId,\n              onChange: e => setUserId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: fetchData,\n              children: \"Load Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"user-list\",\n            children: uniqueUsernames.map((username, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              onClick: () => setSelectedUser(username),\n              children: username\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"message-list\",\n            children: filteredMessages.map((message, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: message.content\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"glX4x/5HvGjOW4wA7n7n7ZSYuRQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","InputGroup","FormControl","ListGroup","axios","jsxDEV","_jsxDEV","App","_s","dataPath","setDataPath","userId","setUserId","messages","setMessages","selectedUser","setSelectedUser","fetchData","response","post","data_path","user_id","data","error","console","uniqueUsernames","Array","from","Set","map","message","username","filteredMessages","filter","className","children","fluid","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","md","index","Item","action","content","_c","$RefreshReg$"],"sources":["/home/sultan/Documents/GitHub/discord-data-reader/discord-data-viewer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  InputGroup,\n  FormControl,\n  ListGroup,\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [dataPath, setDataPath] = useState('');\n  const [userId, setUserId] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/messages', {\n        data_path: dataPath,\n        user_id: userId,\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const uniqueUsernames = Array.from(\n    new Set(messages.map((message) => message.username))\n  );\n\n  const filteredMessages = messages.filter(\n    (message) => message.username === selectedUser\n  );\n\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Row className=\"input-row\">\n          <Col>\n            <InputGroup>\n              <FormControl\n                placeholder=\"Enter the path to your Discord data package\"\n                value={dataPath}\n                onChange={(e) => setDataPath(e.target.value)}\n              />\n              <FormControl\n                placeholder=\"Enter your user ID\"\n                value={userId}\n                onChange={(e) => setUserId(e.target.value)}\n              />\n              <Button variant=\"primary\" onClick={fetchData}>\n                Load Messages\n              </Button>\n            </InputGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n            <ListGroup className=\"user-list\">\n              {uniqueUsernames.map((username, index) => (\n                <ListGroup.Item\n                  key={index}\n                  action\n                  onClick={() => setSelectedUser(username)}\n                >\n                  {username}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col md={8}>\n            <ListGroup className=\"message-list\">\n              {filteredMessages.map((message, index) => (\n                <ListGroup.Item key={index}>\n                  {message.content}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}